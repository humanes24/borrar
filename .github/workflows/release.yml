name: Release Custom Telegraf

on:
  push:
    tags:
      - "v*"
      - "custom-telegraf-*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Build custom Telegraf source (inject plugins + deps)
        env:
          CGO_ENABLED: 0
        run: |
          set -euo pipefail
          chmod +x cicd.sh
          ./cicd.sh build \
            --version "1.35.4" \
            --mode mini \
            --config-dir config \
            --plugins-dir plugins \
            --dist-dir dist \
            --go-get-file dependencies.txt \
            --keep-source
          # No empaquetamos aqu√≠; solo preparamos telegraf_src con plugins y deps

      - name: Install packaging tools (fpm, rpm, zip)
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y ruby ruby-dev rubygems rpm zip
          sudo gem install --no-document fpm

      - name: Package all distributions via Telegraf Makefile
        run: |
          set -euo pipefail
          echo "Packaging ALL via Telegraf Makefile in telegraf_src (make package)"
          pushd telegraf_src
          make package
          popd
          mkdir -p out
          cp -fv telegraf_src/build/dist/* out/ || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: out/*
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/**/*.tar.gz
            release/**/*.sha256
            release/**/*.deb
            release/**/*.rpm
            release/**/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
