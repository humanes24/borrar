name: Build Custom Telegraf

on:
  workflow_dispatch:
    inputs:
      telegraf_version:
        description: "Telegraf version to build (vX.Y.Z)"
        required: true
        default: "1.35.4"
      mode:
        description: "Build mode"
        type: choice
        options: [mini, nano]
        default: mini
      config_dir:
        description: "Directory with .conf files"
        required: false
      plugins_dir:
        description: "Directory with custom plugins"
        required: true
        default: "plugins"
      dist_dir:
        description: "Distribution output directory (optional). If empty, cicd.sh uses 'dist'"
        required: false
        default: ""
      go_version:
        description: "Go version"
        required: true
        default: "1.22.x"
      go_get:
        description: "Extra 'go get' modules (space or comma separated)"
        required: false
      go_get_file:
        description: "Path to a file with one module per line for 'go get'"
        required: false
      publish_release:
        description: "Create GitHub Release and upload artifact"
        type: boolean
        default: false
      release_tag:
        description: "Custom release tag (if publishing). If empty, a tag will be generated"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}

      - name: Validate config directory
        if: ${{ inputs.mode == 'nano' }}
        shell: bash
        run: |
          set -euo pipefail
          CONF_DIR="${{ inputs.config_dir }}"
          if [ -z "$CONF_DIR" ]; then CONF_DIR="config"; fi
          if [ ! -d "$CONF_DIR" ]; then
            echo "::error::Config directory not found: $CONF_DIR"; exit 1; fi
          if ! ls "$CONF_DIR"/*.conf >/dev/null 2>&1; then
            echo "::error::No .conf files found in $CONF_DIR"; exit 1; fi

      - name: Build custom Telegraf (matrix)
        shell: bash
        env:
          GIT_TERMINAL_PROMPT: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          set -euo pipefail
          chmod +x cicd.sh
          CONF_DIR="${{ inputs.config_dir }}"
          if [ -z "$CONF_DIR" ]; then CONF_DIR="config"; fi
          DIST_DIR_INPUT="${{ inputs.dist_dir }}"
          if [ -n "$DIST_DIR_INPUT" ]; then
            mkdir -p "$DIST_DIR_INPUT"
          else
            DIST_DIR_INPUT="dist"
          fi

          ARGS=(
            --version "${{ inputs.telegraf_version }}"
            --mode "${{ inputs.mode }}"
            --config-dir "$CONF_DIR"
            --plugins-dir "${{ inputs.plugins_dir }}"
          )
          if [ -n "${{ inputs.go_get }}" ]; then ARGS+=(--go-get "${{ inputs.go_get }}"); fi
          if [ -n "${{ inputs.go_get_file }}" ]; then ARGS+=(--go-get-file "${{ inputs.go_get_file }}"); fi
          if [ -n "$DIST_DIR_INPUT" ]; then ARGS+=(--dist-dir "$DIST_DIR_INPUT"); fi

          ./cicd.sh build "${ARGS[@]}"
          # Exponer el directorio de salida efectivo al resto de pasos
          echo "DIST_DIR=$DIST_DIR_INPUT" >> "$GITHUB_ENV"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            ${{ env.DIST_DIR }}/**
          if-no-files-found: error
